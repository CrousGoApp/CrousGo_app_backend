name: Build and Analyze

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze Spring Boot Application
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Disable shallow clones for better analysis relevancy

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          cache: 'maven'

      - name: Cache SonarQube Packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with Maven
        run: mvn -B clean package

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B sonar:sonar -Dsonar.projectKey=wardrockay_CrousGo_app_backend_AYxYHM_9sFILVBHzwSA1 -Dsonar.projectName='CrousGo_app_backend'

        nodejs_build:
            needs: sonarqube_scan
            runs-on: self-hosted
            if: success()
            strategy:
              matrix:
                node-version: ['20']
            steps:
              - name: install ssh keys
                run: |
                  install -m 600 -D /dev/null ~/.ssh/id_rsa
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
              - name: connect and pull
                run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git switch ${{ secrets.MAIN_BRANCH }} && git pull && docker compose up --build -d && exit"
              - name: cleanup
                run: rm -rf ~/.ssh